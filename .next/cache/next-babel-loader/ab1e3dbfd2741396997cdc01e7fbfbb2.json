{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ola\\\\Documents\\\\Lukasz\\\\projects\\\\next.js\\\\ec-ui\\\\pages\\\\scheduler.js\";\nvar __jsx = React.createElement;\nimport Layout from \"../layouts/Layout\";\nimport React, { useState, useEffect } from \"react\"; // import \"../styles/Scheduler.scss\";\n\nimport SchedulerNavButtons from \"../components/SchedulerNavButtons\";\nimport SchedulerStep0 from \"../components/SchedulerStep0\";\nimport SchedulerStep1 from \"../components/SchedulerStep1\";\nimport SchedulerStep2 from \"../components/SchedulerStep2\";\nimport SchedulerStep3 from \"../components/SchedulerStep3\";\nimport texts from \"../content/texts\";\nimport config from \"../config/config\";\nimport moment from \"moment-timezone\";\n\nconst Scheduler = () => {\n  // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // }, []);\n  const types = [texts.services.types.one, texts.services.types.two, texts.services.types.three];\n  const {\n    0: step,\n    1: setStep\n  } = useState(0);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(0);\n  const {\n    0: selectedField,\n    1: setSelectedField\n  } = useState(null);\n  const {\n    0: selectedMeetingType,\n    1: setSelectedMeetingType\n  } = useState(null);\n  const {\n    0: selectedDay,\n    1: setSelectedDay\n  } = useState(null);\n  const {\n    0: selectedTime,\n    1: setSelectedTime\n  } = useState(null);\n  const meetingTypes = types[selectedField] || [];\n  const meetingDuration = (meetingTypes[selectedMeetingType] || []).minutes || 50;\n  const meetingType = meetingTypes[selectedMeetingType] || {};\n  const {\n    0: url,\n    1: setUrl\n  } = useState(config.apiURL + \"week/asap/?\" + new URLSearchParams({\n    meetingDuration\n  }));\n  const {\n    0: weekArray,\n    1: setWeekArray\n  } = useState([]);\n  const {\n    0: weekSuccess,\n    1: setWeekSuccess\n  } = useState(null);\n  const {\n    0: hintsCheck,\n    1: setHintsCheck\n  } = useState(false);\n  const {\n    0: savedMeeting,\n    1: setSavedMeeting\n  } = useState(null);\n\n  const fetchWeek = url => {\n    const requestOptions = {\n      method: \"GET\",\n      withCredentials: true\n    };\n    setHintsCheck(false);\n    fetch(url, requestOptions).then(res => res.json()).then(result => {\n      setWeekArray(result.array || []);\n      setWeekSuccess(result.success);\n      setHintsCheck(true); // console.log(result.array);\n    }, error => {\n      console.log(\"Error while fetching week array:\", error);\n    });\n  };\n\n  useEffect(() => {\n    const sumSelected = () => {\n      if (selectedTime !== null) return 3;\n      if (selectedDay !== null) return 2.5;\n      if (selectedMeetingType !== null) return 2;\n      if (selectedField !== null) return 1;\n      return 0;\n    };\n\n    setSelected(sumSelected());\n  }, [selectedField, selectedMeetingType, selectedDay, selectedTime]);\n  useEffect(() => {\n    fetchWeek(url);\n  }, [url]);\n  useEffect(() => {\n    const params = {\n      meetingDuration\n    };\n\n    if (selectedDay) {\n      params.date = moment.utc(selectedDay).format();\n\n      if (selectedTime) {\n        params.date = moment(selectedDay).hour(Math.trunc(selectedTime)).minute(selectedTime % 1 * 60).utc().format();\n      }\n    } // if (savedMeeting) {\n    //   params.id = savedMeeting._id;\n    // }\n\n\n    setUrl(config.apiURL + \"week/asap/?\" + new URLSearchParams(params));\n  }, [meetingDuration, selectedDay, selectedTime, savedMeeting]);\n  const SchedulerSteps = [__jsx(SchedulerStep0, {\n    setSelected: setSelected,\n    selectedField: selectedField,\n    setSelectedField: setSelectedField,\n    setSelectedMeetingType: setSelectedMeetingType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), __jsx(SchedulerStep1, {\n    setSelected: setSelected,\n    meetingTypes: meetingTypes,\n    selectedMeetingType: selectedMeetingType,\n    setSelectedMeetingType: setSelectedMeetingType,\n    setSelectedDay: setSelectedDay,\n    setSelectedTime: setSelectedTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }), __jsx(SchedulerStep2, {\n    setSelected: setSelected,\n    meetingDuration: meetingDuration,\n    meetingType: meetingType,\n    selectedDay: selectedDay,\n    setSelectedDay: setSelectedDay,\n    selectedTime: selectedTime,\n    setSelectedTime: setSelectedTime,\n    url: url,\n    setUrl: setUrl,\n    weekArray: weekArray,\n    weekSuccess: weekSuccess,\n    hintsCheck: hintsCheck,\n    setHintsCheck: setHintsCheck,\n    fetchWeek: fetchWeek // savedMeeting={savedMeeting}\n    // setSavedMeeting={setSavedMeeting}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), __jsx(SchedulerStep3, {\n    meetingType: meetingType,\n    savedMeeting: savedMeeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  })];\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: \"scheduler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, SchedulerSteps[step], __jsx(SchedulerNavButtons, {\n    step: step,\n    setStep: setStep,\n    selected: selected,\n    setSelected: setSelected,\n    meetingDuration: meetingDuration,\n    selectedDay: selectedDay,\n    selectedTime: selectedTime,\n    setSelectedTime: setSelectedTime // savedMeeting={savedMeeting}\n    ,\n    setSavedMeeting: setSavedMeeting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Scheduler;","map":{"version":3,"sources":["C:/Users/Ola/Documents/Lukasz/projects/next.js/ec-ui/pages/scheduler.js"],"names":["Layout","React","useState","useEffect","SchedulerNavButtons","SchedulerStep0","SchedulerStep1","SchedulerStep2","SchedulerStep3","texts","config","moment","Scheduler","types","services","one","two","three","step","setStep","selected","setSelected","selectedField","setSelectedField","selectedMeetingType","setSelectedMeetingType","selectedDay","setSelectedDay","selectedTime","setSelectedTime","meetingTypes","meetingDuration","minutes","meetingType","url","setUrl","apiURL","URLSearchParams","weekArray","setWeekArray","weekSuccess","setWeekSuccess","hintsCheck","setHintsCheck","savedMeeting","setSavedMeeting","fetchWeek","requestOptions","method","withCredentials","fetch","then","res","json","result","array","success","error","console","log","sumSelected","params","date","utc","format","hour","Math","trunc","minute","SchedulerSteps"],"mappings":"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","sourcesContent":["import Layout from \"../layouts/Layout\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n// import \"../styles/Scheduler.scss\";\r\nimport SchedulerNavButtons from \"../components/SchedulerNavButtons\";\r\nimport SchedulerStep0 from \"../components/SchedulerStep0\";\r\nimport SchedulerStep1 from \"../components/SchedulerStep1\";\r\nimport SchedulerStep2 from \"../components/SchedulerStep2\";\r\nimport SchedulerStep3 from \"../components/SchedulerStep3\";\r\nimport texts from \"../content/texts\";\r\nimport config from \"../config/config\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst Scheduler = () => {\r\n  // useEffect(() => {\r\n  //   window.scrollTo(0, 0);\r\n  // }, []);\r\n\r\n  const types = [\r\n    texts.services.types.one,\r\n    texts.services.types.two,\r\n    texts.services.types.three,\r\n  ];\r\n\r\n  const [step, setStep] = useState(0);\r\n  const [selected, setSelected] = useState(0);\r\n  const [selectedField, setSelectedField] = useState(null);\r\n  const [selectedMeetingType, setSelectedMeetingType] = useState(null);\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n\r\n  const meetingTypes = types[selectedField] || [];\r\n\r\n  const meetingDuration =\r\n    (meetingTypes[selectedMeetingType] || []).minutes || 50;\r\n\r\n  const meetingType = meetingTypes[selectedMeetingType] || {};\r\n\r\n  const [url, setUrl] = useState(\r\n    config.apiURL + \"week/asap/?\" + new URLSearchParams({ meetingDuration })\r\n  );\r\n  const [weekArray, setWeekArray] = useState([]);\r\n  const [weekSuccess, setWeekSuccess] = useState(null);\r\n  const [hintsCheck, setHintsCheck] = useState(false);\r\n  const [savedMeeting, setSavedMeeting] = useState(null);\r\n\r\n  const fetchWeek = (url) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n    };\r\n\r\n    setHintsCheck(false);\r\n    fetch(url, requestOptions)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setWeekArray(result.array || []);\r\n          setWeekSuccess(result.success);\r\n          setHintsCheck(true);\r\n          // console.log(result.array);\r\n        },\r\n        (error) => {\r\n          console.log(\"Error while fetching week array:\", error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sumSelected = () => {\r\n      if (selectedTime !== null) return 3;\r\n      if (selectedDay !== null) return 2.5;\r\n      if (selectedMeetingType !== null) return 2;\r\n      if (selectedField !== null) return 1;\r\n      return 0;\r\n    };\r\n    setSelected(sumSelected());\r\n  }, [selectedField, selectedMeetingType, selectedDay, selectedTime]);\r\n\r\n  useEffect(() => {\r\n    fetchWeek(url);\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    const params = {\r\n      meetingDuration,\r\n    };\r\n    if (selectedDay) {\r\n      params.date = moment.utc(selectedDay).format();\r\n      if (selectedTime) {\r\n        params.date = moment(selectedDay)\r\n          .hour(Math.trunc(selectedTime))\r\n          .minute((selectedTime % 1) * 60)\r\n          .utc()\r\n          .format();\r\n      }\r\n    }\r\n    // if (savedMeeting) {\r\n    //   params.id = savedMeeting._id;\r\n    // }\r\n    setUrl(config.apiURL + \"week/asap/?\" + new URLSearchParams(params));\r\n  }, [meetingDuration, selectedDay, selectedTime, savedMeeting]);\r\n\r\n  const SchedulerSteps = [\r\n    <SchedulerStep0\r\n      setSelected={setSelected}\r\n      selectedField={selectedField}\r\n      setSelectedField={setSelectedField}\r\n      setSelectedMeetingType={setSelectedMeetingType}\r\n    />,\r\n    <SchedulerStep1\r\n      setSelected={setSelected}\r\n      meetingTypes={meetingTypes}\r\n      selectedMeetingType={selectedMeetingType}\r\n      setSelectedMeetingType={setSelectedMeetingType}\r\n      setSelectedDay={setSelectedDay}\r\n      setSelectedTime={setSelectedTime}\r\n    />,\r\n    <SchedulerStep2\r\n      setSelected={setSelected}\r\n      meetingDuration={meetingDuration}\r\n      meetingType={meetingType}\r\n      selectedDay={selectedDay}\r\n      setSelectedDay={setSelectedDay}\r\n      selectedTime={selectedTime}\r\n      setSelectedTime={setSelectedTime}\r\n      url={url}\r\n      setUrl={setUrl}\r\n      weekArray={weekArray}\r\n      weekSuccess={weekSuccess}\r\n      hintsCheck={hintsCheck}\r\n      setHintsCheck={setHintsCheck}\r\n      fetchWeek={fetchWeek}\r\n      // savedMeeting={savedMeeting}\r\n      // setSavedMeeting={setSavedMeeting}\r\n    />,\r\n    <SchedulerStep3 meetingType={meetingType} savedMeeting={savedMeeting} />,\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <main>\r\n        <section className=\"scheduler\">\r\n          {SchedulerSteps[step]}\r\n          <SchedulerNavButtons\r\n            step={step}\r\n            setStep={setStep}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n            meetingDuration={meetingDuration}\r\n            selectedDay={selectedDay}\r\n            selectedTime={selectedTime}\r\n            setSelectedTime={setSelectedTime}\r\n            // savedMeeting={savedMeeting}\r\n            setSavedMeeting={setSavedMeeting}\r\n          />\r\n        </section>\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Scheduler;\r\n"]},"metadata":{},"sourceType":"module"}