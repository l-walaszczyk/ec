{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ola\\\\Documents\\\\Lukasz\\\\projects\\\\next.js\\\\ec-ui\\\\components\\\\Time.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport \"../styles/Time.scss\";\nimport moment from \"moment-timezone\";\n\nconst Time = ({\n  weekArray,\n  selectedDay,\n  selectedTime,\n  setSelectedTime,\n  setSelected\n}) => {\n  const timeZone = moment.tz.zone(\"Europe/Warsaw\");\n  const timeOffset = timeZone.parse(selectedDay);\n  const timeOffsetHours = timeOffset / 60;\n  const dayObject = weekArray.find(item => moment.utc(item.day).isSame(selectedDay, \"day\"));\n  const hours = dayObject ? dayObject.hours : [];\n  const times = hours.map((hour, index) => {\n    const hourLocal = hour - timeOffsetHours;\n    const integerPart = Math.trunc(hourLocal);\n    const decimalPart = hourLocal % 1 * 60;\n    return __jsx(\"button\", {\n      key: index,\n      type: \"button\",\n      className: `time${hour === selectedTime ? \" selected\" : \"\"}`,\n      onClick: () => {\n        setSelectedTime(hour); // setSelected(3);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, integerPart, \" \", __jsx(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    }, (decimalPart < 10 ? \"0\" : \"\") + decimalPart));\n  });\n\n  if (hours.length) {\n    return __jsx(\"div\", {\n      className: \"time-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Wybierz godzin\\u0119 wizyty\"), __jsx(\"div\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, times)));\n  } else {\n    return null;\n  }\n};\n\nexport default Time;","map":{"version":3,"sources":["C:/Users/Ola/Documents/Lukasz/projects/next.js/ec-ui/components/Time.js"],"names":["React","moment","Time","weekArray","selectedDay","selectedTime","setSelectedTime","setSelected","timeZone","tz","zone","timeOffset","parse","timeOffsetHours","dayObject","find","item","utc","day","isSame","hours","times","map","hour","index","hourLocal","integerPart","Math","trunc","decimalPart","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,SADY;AAEZC,EAAAA,WAFY;AAGZC,EAAAA,YAHY;AAIZC,EAAAA,eAJY;AAKZC,EAAAA;AALY,CAAD,KAMP;AACJ,QAAMC,QAAQ,GAAGP,MAAM,CAACQ,EAAP,CAAUC,IAAV,CAAe,eAAf,CAAjB;AACA,QAAMC,UAAU,GAAGH,QAAQ,CAACI,KAAT,CAAeR,WAAf,CAAnB;AACA,QAAMS,eAAe,GAAGF,UAAU,GAAG,EAArC;AAEA,QAAMG,SAAS,GAAGX,SAAS,CAACY,IAAV,CAAgBC,IAAD,IAC/Bf,MAAM,CAACgB,GAAP,CAAWD,IAAI,CAACE,GAAhB,EAAqBC,MAArB,CAA4Bf,WAA5B,EAAyC,KAAzC,CADgB,CAAlB;AAIA,QAAMgB,KAAK,GAAGN,SAAS,GAAGA,SAAS,CAACM,KAAb,GAAqB,EAA5C;AAEA,QAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,UAAMC,SAAS,GAAGF,IAAI,GAAGV,eAAzB;AACA,UAAMa,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAApB;AACA,UAAMI,WAAW,GAAIJ,SAAS,GAAG,CAAb,GAAkB,EAAtC;AAEA,WACE;AACE,MAAA,GAAG,EAAED,KADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAG,OAAMD,IAAI,KAAKlB,YAAT,GAAwB,WAAxB,GAAsC,EAAG,EAH7D;AAIE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,eAAe,CAACiB,IAAD,CAAf,CADa,CAEb;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGG,WATH,OASgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,CAACG,WAAW,GAAG,EAAd,GAAmB,GAAnB,GAAyB,EAA1B,IAAgCA,WAAtC,CAThB,CADF;AAaD,GAlBa,CAAd;;AAoBA,MAAIT,KAAK,CAACU,MAAV,EAAkB;AAChB,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,KAAJ,CADF,CAFF,CADF;AAQD,GATD,MASO;AACL,WAAO,IAAP;AACD;AACF,CAjDD;;AAkDA,eAAenB,IAAf","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Time.scss\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst Time = ({\r\n  weekArray,\r\n  selectedDay,\r\n  selectedTime,\r\n  setSelectedTime,\r\n  setSelected,\r\n}) => {\r\n  const timeZone = moment.tz.zone(\"Europe/Warsaw\");\r\n  const timeOffset = timeZone.parse(selectedDay);\r\n  const timeOffsetHours = timeOffset / 60;\r\n\r\n  const dayObject = weekArray.find((item) =>\r\n    moment.utc(item.day).isSame(selectedDay, \"day\")\r\n  );\r\n\r\n  const hours = dayObject ? dayObject.hours : [];\r\n\r\n  const times = hours.map((hour, index) => {\r\n    const hourLocal = hour - timeOffsetHours;\r\n    const integerPart = Math.trunc(hourLocal);\r\n    const decimalPart = (hourLocal % 1) * 60;\r\n\r\n    return (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        className={`time${hour === selectedTime ? \" selected\" : \"\"}`}\r\n        onClick={() => {\r\n          setSelectedTime(hour);\r\n          // setSelected(3);\r\n        }}\r\n      >\r\n        {integerPart} <sup>{(decimalPart < 10 ? \"0\" : \"\") + decimalPart}</sup>\r\n      </button>\r\n    );\r\n  });\r\n\r\n  if (hours.length) {\r\n    return (\r\n      <div className=\"time-container\">\r\n        <h2>Wybierz godzinÄ™ wizyty</h2>\r\n        <div className=\"time\">\r\n          <p>{times}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default Time;\r\n"]},"metadata":{},"sourceType":"module"}